#!/usr/bin/env bash


#source $NS_WDIR/lib/automation_util

#PATH_TO_LIB="$NS_WDIR/lib"
######PATH_TO_TEST_RUN="$NS_WDIR/logs/TR$(get_testidx)"
#PATH_TO_TEST_RUN="$NS_WDIR/logs/TR$(get_test_idx)"
#PARTITION_PATH="${PATH_TO_TEST_RUN}/$(get_test_partition)"
#PROGRESS_REPORT_FILE="${PATH_TO_TEST_RUN}/progress.report"
####SUMMARY_GDF_FILE="${PATH_TO_TEST_RUN}/summary_gdf.data"
#EVENT_LOG_FILE="${PARTITION_PATH}/event.log"
#MONITOR_LOG_FILE="${PARTITION_PATH}/monitor.log"

SUMMARY_GDF_FILE="/home/netstorm/work/logs/TR67252/summary_gdf.data"

function handle_reg_001_case(){
#    BaseLine_Tsr_Directory_Regression1="$NS_WDIR/logs/tsr/072815_181628/2335/Regression001_results.csv"
#    Test_Run=`grep -w $Tname $BaseLine_Tsr_Directory_Regression1 |cut -d ',' -f2`
    SUMMARY_GDF_BASELINE="$NS_WDIR/logs/TR6546/summary_gdf.data"

    PARAMLIST="/home/automation/workbench/automation/nscore/regression/testcases/Regression001/ParamList"
    IFS=$'\n'
    rs=3
    for line in $(cat $PARAMLIST);do 
        #Get filters for baseline and current test run from ParamList file
        baseline_filters=$(echo $line| cut -d '|' -f 1); 
        current_filters=$(echo $line| cut -d '|' -f 2); 
        echo "Going to filter baseline TR with $baseline_filters and current TR with $current_filters" 
    
        #Call python script to filter out the wanted values from summary_gdfs of the respective test runsa and find their difference
        python /home/automation/workbench/automation/nscore/regression/testcases/Regression001/filter.py ${SUMMARY_GDF_BASELINE} ${SUMMARY_GDF_FILE} "${baseline_filters}" "${current_filters}"

        #Obtaining pass/fail status based on the return value of above called script
        #Returns 1 - Fail
        #        0 - Pass
        output=$(echo $?)
        echo "Output is $output"
        if [ $output -eq 1 ];then
            if [ "$baseline_filters" == "Active Vusers(NA)" -a $rs -ne 1 ];then
                rs=0
            else
                rs=1
                echo "Failed"
            fi
        elif [ $rs -ne 1 ];then
            rs=0
        fi
    done
    echo "Result status is: $rs"
    if [ $rs -eq 0 ];then
        echo "Testcase passed"
    else
        echo "FAIL" "Testcase failed"
    fi
}


handle_reg_001_case
