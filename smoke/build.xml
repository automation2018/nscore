<?xml version="1.0"?>

<!--Task: Declaring project name-->
<project name="core-smoke" basedir="." default="run">

    <!--Task: Check vnc process running status-->
    <target name="vnc-status-check">
       <exec executable="ps" outputproperty="vnc.file">
           <arg value="-ef"/>
           <arg value="|"/>
           <arg value="grep"/>
           <arg value="vnc"/>
        </exec>
        <fail message="VNC is not running start the vnc port" unless="vnc.file"/>
    </target>
  
    <!--Task: Initiates vnc process instance-->
    <target name="vnc-process-restart" depends="vnc-status-check">
       <exec executable="vncserver" outputproperty="action.file">
           <arg value=":3"/>
       </exec>
       <fail message="Vnc process not started please check" unless="action.file"/>
    </target>
   
    <!--Task: File to declare all build variable values-->
    <property file="build.properties"/>
    
    <!--Task: Cleans test directory structure-->
    <target name="clean" description="clean">
        <delete dir="${scripts.dirs.abs.path}" failonerror="false"/>
        <delete dir="${scenarios.files.abs.path}" failonerror="false"/>
        <delete dir="${testcases.dirs.abs.path}" failonerror="false"/>
        <delete dir="${testsuites.files.abs.path}" failonerror="false"/>
    </target>
    
    <!--Task: Copies test scenario structure to desired locations and modifies modes-->
    <target name="copy-of-testscenario-sctructure" depends="clean">
        <copy todir="${scripts.dir}">
            <fileset dir="scripts"/>
        </copy>
        <copy todir="${scenarios.dir}">
            <fileset dir="scenarios"/>
        </copy>
        <copy todir="${testcases.dir}">
            <fileset dir="testcases"/>
        </copy>
        <copy todir="${testsuites.dir}">
            <fileset dir="testsuites"/>
        </copy>
        <copy todir="${lib.dir}">
            <fileset dir="../lib"/>
        </copy>
        <chmod perm="755">
            <fileset dir="${testcases.dir}">
                <include name="**/*_test_*"/> 
                <include name="**/check_status"/>
            </fileset>
        </chmod> 
    </target>
    
    <!--Task: Copies hpd.conf file to Hpd/NO server to initiate server for smoke suite--> 
    <target name="copy-hpd-file">
        <scp file="${hpd.conf.ns}" todir="${remote.user}@${remote.host}:${hpd.conf.no}" password="${remote.password}" trust="true"/>
    </target>
   
    <!--Task: Restarts and check status of NO server--> 
    <target name="hpd-process-restart" depends="copy-hpd-file, copy-of-testscenario-sctructure">
        <sshexec host="${remote.host}" username="${remote.user}" password="${remote.password}" command="${command.hpd.restart}" trust="true"/>
        <sleep seconds="20"/>
        <sshexec host="${remote.host}" username="${remote.user}" password="${remote.password}" command="${command.hpd.show}" trust="true" outputproperty="hpd.process"/>
        <fail message="HPD is not running please see hpd_error.log first" unless="hpd.process"/>
    </target>

   <!--Task: Copies httpd.conf file to set enviornment for auth_basic test execution-->
    <target name="copy-httpd-conf-file">
        <scp file="${httpd.conf.ns}" todir="${remote.user}@${remote.host1}:${httpd.conf.no}" password="${remote.password1}" trust="true"/>
    </target>

    <!--Task: Restarts httpd server and checks status-->
    <target name="httpd-process-restart">
        <sshexec host="${remote.host1}" username="${remote.user}" password="${remote.password1}" command="${command.httpd.restart}" trust="true"/>
        <sleep seconds="10"/>
        <sshexec host="${remote.host1}" username="${remote.user}" password="${remote.password1}" command="${command.httpd.status}" trust="true" outputproperty="httpd.process"/>
        <fail message="HTTPD is not running please see httpd_error.log first" unless="httpd.process"/>
    </target>

    <!--Task: To debug perticular test execution and changes-->
    <!--<target name="debug" depends="copy-of-testscenario-sctructure">-->
    <target name="debug" depends="hpd-process-restart">
        <exec executable="/bin/bash" taskname="info">
            <arg value="run_ts.sh"/>
            <arg value="Smoke"/>
        </exec>
    </target>
    
    <!--Task: Initiates excution of Smoke testsuite--> 
    <target name="Smoke" depends="send-startup-mail, hpd-process-restart, vnc-process-restart">
        <exec executable="/bin/bash" outputproperty="start.time">
            <arg value="-c"/>
            <arg value="date +'%d/%m/%y %I:%M:%S %p'"/>
        </exec>

        <echo message="start time = ${start.time}"/>

        <exec executable="/bin/bash" taskname="info">
            <arg value="run_ts.sh"/>
            <arg value="Smoke"/>
            <arg value="0"/>
        </exec>
    </target>
    
    <!--Task: Initiates excution of Smoke debug testsuite without sending acknowledgement mails--> 
    <target name="smoke" depends="hpd-process-restart, vnc-process-restart">
    <!--<target name="smoke" depends="copy-of-testscenario-sctructure">-->
        <exec executable="/bin/bash" taskname="info">
            <arg value="run_ts.sh"/>
            <arg value="Smoke"/>
            <arg value="0"/>
        </exec>
    </target>

    <!--Task: Update mail.properties prior to Test Start Mail Send--> 
    <target name="get_start_mail_values">
        <exec executable="/bin/bash" taskname="info">
            <arg value="update_mail_presetup"/>
        </exec>
    </target>

    <!--Task: Send smoke automation start mail-->
    <target name="send-startup-mail" depends="get_start_mail_values">
        <property file="mail.properties"/>
        <mail mailhost="websrv.cavisson.com" mailport="587" tolist="${configured.mail.list.to}" cclist="${configured.mail.list.cc}" messageMimeType="text/html" subject="Smoke: NSCore ${curr.release} B${curr.build} - Started" messagefile="${startup.mail.file}">
	    <from address="automation@cavisson.com"/>
        </mail>
    </target>

   <!--Task: Update mail.properties prior to automation result mail Send--> 
   <target name="get_test_results">
        <exec executable="/bin/bash" outputproperty="start.time">
            <arg value="-c"/>
            <arg value="date +'%d/%m/%y %I:%M:%S %p'"/>
        </exec>

        <echo message="${start.time}"/>
        
        <exec executable="/bin/bash" taskname="info">
            <arg value="update_mail_results"/>
            <arg value="${start.time}"/>
        </exec>
   </target>
   
   <!--Task: Send smoke automation results with attachments-->
   <target name="send-email" depends="get_test_results"> 
       <property file="mail.properties"/>
       <mail mailhost="websrv.cavisson.com" mailport="587" tolist="${configured.mail.list.to}" cclist="${configured.mail.list.cc}" messageMimeType="text/html" subject="Smoke: NSCore ${curr.release} B${curr.build} - ${buil.status.header}" messagefile="${mail.result.file}">
           <from address="automation@cavisson.com"/>   		   
           <attachments> 
               <fileset dir="${smoke.results.dir}">
                   <include name="${first.attachment}"/>
               </fileset>
           </attachments>	   
       </mail>	       
   </target>	   
  
   <!--Task: Declaring default target to initiate build--> 
   <target name="run" depends="Smoke, send-email">
   </target>
   
   <!--Task: Declaring default target to initiate build--> 
   <target name="smoke-debug" depends="smoke">
   </target>
   
   <!--Task: test--> 
   <target name="test" depends="send-email">
   </target>

</project>
