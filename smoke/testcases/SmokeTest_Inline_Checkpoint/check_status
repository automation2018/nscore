#!/usr/bin/env bash
# Generated by: needle
#    Date Time: 09/09/16 10:54:38 AM
#  Description: Check status to validate cases for smoke
# 
# Conventions
#   1. Two(2) space indentation. No tabs
#   2. Variables and function starts with snake_case
#		3. Constants are declared with ALL_CAPS

# Source out required files
source $NS_WDIR/lib/automation_util

# Default Constants
PATH_TO_TEST_RUN="$NS_WDIR/logs/TR${T_RUN_ID}"
PARTITION_PATH="${PATH_TO_TEST_RUN}/$(get_test_partition)"
PROGRESS_REPORT_FILE="${PATH_TO_TEST_RUN}/progress.report"
T_NAME="$(get_tname)"

# Entry point to check status
# Add cases to handle your validation
function main() {
	case $(get_tname) in
    "SMOKE-036-001") handle_inline-checkpoint-001 ;;
    "SMOKE-036-002") handle_inline-checkpoint-002 ;;
    "SMOKE-036-003") handle_inline-checkpoint-003 ;;
    "SMOKE-036-004") handle_inline-checkpoint-004 ;;
    "SMOKE-036-005") handle_inline-checkpoint-005 ;;
    "SMOKE-036-006") handle_inline-checkpoint-006 ;;
    "SMOKE-036-007") handle_inline-checkpoint-007 ;;
    "SMOKE-036-008") handle_inline-checkpoint-008 ;;
    "SMOKE-036-009") handle_inline-checkpoint-009 ;;
# End case def
		*) handle_unknown_case ;;
		?) handle_unknown_case ;;
  esac
}

# Helper function to log status
# Sets additional product id and
# category id
function handle_unknown_case() {
	error "Testcase name not found"
	log_status_and_exit_ex "FAIL" "Testcase name not found"
}

# TODO: 
# 1. Add logic to validate case smoke-001
# 2. Depending upon evaluation update the status with your own description
function get_value1(){
          expected_url_report=2
          expected_transaction_report="completed 2/succ 0/CVFail: 2"
          actual_url_report=$(grep "Url  Report" $PROGRESS_REPORT_FILE | awk '{print $15}')
          actual_transaction_report=$(grep "Transaction Report:" $PROGRESS_REPORT_FILE | awk '{print $16" "$17" "$18" "$19}')
}

function get_value2(){
          expected_url_report=39
          expected_transaction_report="completed 10/succ 8/CVFail: 2"
          actual_url_report=$(grep "Url  Report" $PROGRESS_REPORT_FILE | awk '{print $15}')
          actual_transaction_report=$(grep "Transaction Report:" $PROGRESS_REPORT_FILE | awk '{print $16" "$17" "$18" "$19}')
}

function get_value3(){
          expected_url_report=39
          expected_transaction_report="completed 10/succ 10"
          actual_transaction_report=$(grep "Transaction Report:" $PROGRESS_REPORT_FILE | awk '{print $16" "$17" "$18}')
          cvfail_count=$(grep "CVFail" $PROGRESS_REPORT_FILE | wc -l)
          actual_url_report=$(grep "Url  Report" $PROGRESS_REPORT_FILE | awk '{print $15}')
}

function handle_inline-checkpoint-001() {
           get_value1
           debug_log "1 case"
           debug_log "actual transaction report_case1=$actual_transaction_report"
           debug_log "expected transaction report_case1=$expected_transaction_report"
           debug_log "actual url report_case1=$actual_url_report"
           debug_log "expected url report_case1=$expected_url_report"
          if [[ $actual_url_report -eq $expected_url_report  && "$actual_transaction_report" == "$expected_transaction_report" ]];then
           log_status_and_exit_ex "PASS" "Testcase smoke-inline-checkpoint-001(Failure condition checked) : Stop the session after string found with CVFail"
          else
           log_status_and_exit_ex "FAIL" "Testcase smoke-inline-checkpoint-001(Failure condition checked) : Stop the session after string found with CVFail"
          fi
}

function handle_inline-checkpoint-002() {
           get_value2
           debug_log "actual transaction report_case1=$actual_transaction_report"
           debug_log "expected transaction report_case1=$expected_transaction_report"
           debug_log "actual url report_case1=$actual_url_report"
           debug_log "expected url report_case1=$expected_url_report"
          if [ $actual_url_report -eq $expected_url_report ] && [ "$actual_transaction_report" == "$expected_transaction_report" ];then
           log_status_and_exit_ex "PASS" "Testcase smoke-inline-checkpoint-002(Failure condition checked) : Continue with the session after string found with CVFail"
          else
           log_status_and_exit_ex "FAIL" "Testcase smoke-inline-checkpoint-002(Failure condition checked) : Continue with the session after string found with CVFail"
          fi
}

function handle_inline-checkpoint-003() {
           get_value3
           debug_log "actual url report=$actual_url_report"
           debug_log "CVFail count=$cvfail_count"
           debug_log "actual transaction report log=$actual_transaction_report"
           debug_log "expected transaction report log=$expected_transaction_report"
          if [ $actual_url_report -eq $expected_url_report ] && [ "$cvfail_count" -eq 0 ] && [ "$actual_transaction_report" == "$expected_transaction_report" ];then
           log_status_and_exit_ex "PASS" "Testcase smoke-inline-checkpoint-003(Failure condition unchecked) : Continue with the session after string found with no CVFail"
          else
           log_status_and_exit_ex "FAIL" "Testcase smoke-inline-checkpoint-003(Failure condition unchecked) : Continue with the session after string found with no CVFail"
          fi
}

function handle_inline-checkpoint-004() {
           get_value1
           debug_log "transaction report log=$actual_transaction_report"
           debug_log "actual url report=$actual_url_report"
          if [ $actual_url_report -eq $expected_url_report ] && [ "$actual_transaction_report" == "$expected_transaction_report" ];then
           log_status_and_exit_ex "PASS" "Testcase smoke-inline-checkpoint-004(Failure condition unchecked) : Stop the session after string not found with CVFail"
          else
           log_status_and_exit_ex "FAIL" "Testcase smoke-inline-checkpoint-004(Failure condition unchecked) : Stop the session after string not found with CVFail"
          fi
}

function handle_inline-checkpoint-005() {
           get_value1
           debug_log "transaction report log=$actual_transaction_report"
           debug_log "actual url report=$actual_url_report"
          if [ $actual_url_report -eq $expected_url_report ] && [ "$actual_transaction_report" == "$expected_transaction_report" ];then
           log_status_and_exit_ex "PASS" "Testcase smoke-inline-checkpoint-005(RE case with Failure condition checked) : Stop the session after string found with CVFail"
          else
           log_status_and_exit_ex "FAIL" "Testcase smoke-inline-checkpoint-005(RE case with Failure condition checked) : Stop the session after string found with CVFail"
          fi

}

function handle_inline-checkpoint-006() {
           get_value2
           debug_log "transaction report log=$actual_transaction_report"
           debug_log "actual url report=$actual_url_report"
          if [ $actual_url_report -eq $expected_url_report ] && [ "$actual_transaction_report" == "$expected_transaction_report" ];then
           log_status_and_exit_ex "PASS" "Testcase smoke-inline-checkpoint-006(RE case with Failure condition checked) : Continue with session after string found with CVFail"
          else
           log_status_and_exit_ex "FAIL" "Testcase smoke-inline-checkpoint-006(RE case with Failure condition checked) : Continue with session after string found with CVFail"
          fi
}

function handle_inline-checkpoint-007() {
           get_value3
           debug_log "actual url report=$actual_url_report"
           debug_log "actual CVFail count=$cvfail_count"
           debug_log "actual transaction report log=$actual_transaction_report"
           debug_log "expected url report=$expected_url_report"
           debug_log "expected transaction report log=$expected_transaction_report"
          if [ $actual_url_report -eq $expected_url_report ] && [ "$cvfail_count" -eq 0 ] && [ "$actual_transaction_report" == "$expected_transaction_report" ];then
           log_status_and_exit_ex "PASS" "Testcase smoke-inline-checkpoint-007(RE case with Failure condition not checked) : Continue with session after string found with no CVFail"
          else
           log_status_and_exit_ex "FAIL" "Testcase smoke-inline-checkpoint-007(RE case with Failure condition not checked) : Continue with session after string found with no CVFail"
          fi
}

function handle_inline-checkpoint-008() {
         expected_url_report=9
         expected_transaction_report="completed 9/succ 1/CVFail: 8"
         actual_url_report=$(grep "Url  Report" $PROGRESS_REPORT_FILE | awk '{print $15}')
         actual_transaction_report=$(grep "Transaction Report:" $PROGRESS_REPORT_FILE | awk '{print $16" "$17" "$18" "$19}')
          debug_log "transaction report log=$actual_transaction_report"
          debug_log "actual url report=$actual_url_report"
         if [ $actual_url_report -eq $expected_url_report ] && [ "$actual_transaction_report" == "$expected_transaction_report" ];then
          log_status_and_exit_ex "PASS" "Testcase smoke-inline-checkpoint-008(Failure condition checked with two checkpoint) : Continue after string found in first checkpoint and stop after string found in second checkpoint with CVFail"
         else
          log_status_and_exit_ex "FAIL" "Testcase smoke-inline-checkpoint-008(Failure condition checked with two checkpoint) : Continue after string found in first checkpoint and stop after string found in second checkpoint with CVFail"
         fi
}

function handle_inline-checkpoint-009() {
        expected_url_report=44
        expected_transaction_report="completed 15/succ 8/CVFail: 7"
        actual_url_report=$(grep "Url  Report" $PROGRESS_REPORT_FILE | awk '{print $15}')
        actual_transaction_report=$(grep "Transaction Report:" $PROGRESS_REPORT_FILE | awk '{print $16" "$17" "$18" "$19}')
         debug_log "transaction report log=$actual_transaction_report"
         debug_log "actual url report=$actual_url_report"
        if [ $actual_url_report -eq $expected_url_report ] && [ "$actual_transaction_report" == "$expected_transaction_report" ];then
         log_status_and_exit_ex "PASS" "Testcase smoke-inline-checkpoint-009(Failure condition checked with two checkpoint) : Continue with the session because used(G_CONTINUE_ON_PAGE_ERROR ALL ALL 1)"
        else
         log_status_and_exit_ex "FAIL" "Testcase smoke-inline-checkpoint-009(Failure condition checked with two checkpoint) : Continue with the session because used(G_CONTINUE_ON_PAGE_ERROR ALL ALL 1)"
         fi
}

# Call to main function
# Do not override it
main
exit 0
