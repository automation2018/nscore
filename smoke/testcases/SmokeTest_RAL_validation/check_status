#!/usr/bin/env bash

source $NS_WDIR/lib/automation_util
T_NAME=$(get_tname)


function main(){
    case $(get_tname) in
        "SMOKE-044-01") validate_RAL-001 ;;
        "Replay") validate_RAL-002 ;;

        *) handle_unknown_case ;;
        ?) handle_unknown_case ;;
    esac
}

function handle_unknown_case(){
    log_status_and_exit_ex "FAIL" "Testcase not found"
}

Directory_Path=/home/netstorm/work/scripts/webService_Replay
Scenario_File=/home/netstorm/work/scenarios/webService_Replay.conf
Tool=/home/automation/workbench/automation/nscore/smoke/testcases/SmokeTest_RAL_validation/Replay_wells
ns_index_file="${Tool}"/replay_data1/ns_index_0
soap_index_file="${Tool}"/replay_data/replay_data/extracts/SOAP.log.1.txt
debug_log  "$Tool"

function validate_RAL-001(){
    debug_log "RAL_Validation"
    ServerHost_Exist=$(grep -w  "SERVER_HOST 127.0.0.1 10.10.30.96 -" ${Scenario_File})
    debug_log "ServerHost_Exist:${ServerHost_Exist}"
    if [ -d ${Directory_Path} ] && [ -f ${Scenario_File} ]; then
        if [   -n  "${ServerHost_Exist}"  ]; then
            log_status_and_exit_ex "PASS" "Server host added inside scenario file after genereated by tool"
        else
            log_status_and_exit_ex "FAIL" "Server host not added inside scenario file after genereated by tool"
        fi
    else
        log_status_and_exit_ex "FAIL" "Script and Scenarion file is not generated by tool"
    fi
}
########## Read ns_index file ########
function read_ns_indexFile(){
    while read -r line
    do
        data=$line
        data1=$(echo "${data}" | cut -d ',' -f 1,3)
        echo "${data1}"
    done < ${ns_index_file}
}

######## Read SOAP File ###########
function read_Soap_Log_File(){
    while read -r line
    do
        data=${line}
        data1=$(echo "${data}" |grep -o "RequestTimeEx=.*\|<ns[1-9]:XACustId>.*</ns[1-9]:XACustId>" |egrep -o "[0-9.]+[0-9.]")
        echo "${data1}"
    done < ${soap_index_file}
}

function validate_RAL-002(){

data2=($(read_Soap_Log_File))
>file.in
for i in ${data2[@]}
do
    awk "BEGIN { printf(\"%.0f\n\", $i); }"|tee -a file.in
done
    cat file.in | sed "N;s/\n/,/" > file.out

>file.in
i=0
baseReqTime=
for line in $(cat file.out); do
    id=$(cut -d , -f 2 <<< $line)
    reqTime=$(cut -d , -f 1 <<< $line)
    if [ $i -eq 0 ]; then
        baseReqTime=$reqTime
        echo "$id,0"|tee -a file.in
        i=$((i+1))
        continue
    fi
    timeDiff=$(((reqTime - baseReqTime)*1000))
    echo "$id,$timeDiff"|tee -a file.in
done
data1=($(read_ns_indexFile))
for i in "${data1[@]}";
do
    for line in $(cat file.in);
    do
        if [ "$i" ==  "$line" ];then                                                                                                debug_log "PASS"
        fi
    done
done

}

main

exit 0
