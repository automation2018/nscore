/*-----------------------------------------------------------------------------
    Name: flow
    Generated By: netstorm
    Date of generation: 06/19/2012 01:35:43
    Flow details:
    Modification History:
-----------------------------------------------------------------------------*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "ns_string.h"
#define %API_TYPE
#define TEST_TYPE %TEST_CASE_TYPE_NUM

char *file_name=%FILE_NAME ; //File name with or without path.
int mode=%FILE_MODE ; //NS_APPEND_FILE && NS_TRUNC_FILE

#ifdef SAVE_STRING
void call_to_save_string_api() 
{
  char *str = %inputString; 
  fprintf(stdout,"\nNS_SAVE_STRING API Called");
  fprintf(stdout,"\nSaving %s to NS_DECL_VAR{_DP}",str);
  int return_val = ns_save_string(str,"_DP");
  if ( return_val != 0 )
     fprintf(stderr,"\nSTATUS=FAIL\n");
  else 
     fprintf(stdout,"\nSTATUS=PASS\n");

  fprintf(stdout,"\nEND of SAVE_STRING API");
}
#endif 

#ifdef EVAL_STRING 
void call_to_eval_string_api()
{
  char *eval_string ; 
  fprintf(stdout,"\nNS_EVAL_STRING API Called");
  ns_save_string("EVALUATED TEST STRING","_DP_EVAL");
  eval_string = ns_eval_string("{_DP_EVAL}");
  fprintf(stdout,"\nNS_DECL_VAR String=%s",eval_string);
  if ( eval_string == NULL )
     fprintf(stderr,"\nSTATUS=FAIL\n");
  else
     fprintf(stdout,"\nSTATUS=PASS\n");
}
#endif

#ifdef ADV_PARAM 
void call_to_advance_param_api(int type)
{
  int status ;
  fprintf(stdout,"\nNS_ADVANCE_PARAM API Called");
  if ( type == 0 ) 
  {
    status = ns_advance_param("F1");
    status = ns_advance_param("F1");
    fprintf(stdout,"\nValue Read=%s, status=%d",ns_eval_string("{F1}"),status);
  }
  if ( type == 1 )
  {
     status= ns_advance_param("F2");
     char *tmp = ns_eval_string("{F2}");
     status = ns_advance_param("F3");
     char *tmp2 = ns_eval_string("{F2}");
     status = ns_advance_param("F3");
     fprintf(stdout,"\nValue Read=%s, status=%d",ns_eval_string("{F2}"),status);
  }
    if ( status !=0 )
      fprintf(stderr,"\nSTATUS=FAIL\n");
    else
      fprintf(stdout,"\nSTATUS=PASS\n");
}
#endif 

#ifdef SAVE_DATA_VAR 
void call_to_save_data_var_api() 
{
   char *str = %inputString;
   ns_save_string(str,"_DP");
   printf("\nNS_SAVE_DATA_VAR API Called");
   int return_val = ns_save_data_var(file_name,mode,"_DP");
   if ( return_val == 0)
   {
      printf("\nValues saved to %s in mode=%d",file_name,mode);
      printf("\nSTATUS=PASS\n");
   }
   else {
      printf("\nSTATUS=FAIL\n");
  }
}
#endif 

#ifdef SAVE_DATA_EVAL
void call_to_save_data_eval_api()
{
   char *str = %inputString;
   ns_save_string(str,"_DP");
   printf("\nNS_SAVE_DATA_EVAL API Called");
   int return_val = ns_save_data_eval(file_name,mode,"{_DP}");
   if ( return_val == 0)
   {
      printf("\nValues saved to %s in mode=%d",file_name,mode);
      printf("\nSTATUS=PASS\n");
   }
   else {
      printf("\nSTATUS=FAIL\n");
  }
}
#endif 

#ifdef SAVE_DATA_EX 
void call_to_save_data_ex_api()
{
   char *str = %inputString;
   ns_save_string(str,"_DP");
   printf("\nNS_SAVE_DATA_EX API Called");
   int return_val = ns_save_data_ex(file_name,mode,"%s",str);
   if ( return_val == 0)
   {
      printf("\nValues saved to %s in mode=%d",file_name,mode);
      printf("\nSTATUS=PASS\n");
   }
   else {
      printf("\nSTATUS=FAIL\n");
  }
}
#endif 

#ifdef GET_COOKIE_VAL_EX 
void call_to_get_cookie_val_ex()
{
   char *cookie = %COOKIE_NAME ; 
   char COOKIE_BUFF[1024];
   printf("\nUSING GET ALL METHOD FOR COOKIE=%s\n",ns_get_all_cookies(COOKIE_BUFF,1024 +1));
   printf("\nNS_GET_COOKIE_VAL_EX API called");
   char *cookie_found = ns_get_cookie_val_ex(cookie,NULL,NULL);
   //char *cookie_found = ns_get_cookie_val_ex("Cookie_Name",NULL,NULL);
   printf("\nCookie=%s",cookie_found);
   if ( cookie_found == NULL )
      printf("\nSTATUS=FAIL\n");
   else 
      printf("\nSTATUS=PASS\n");
   ns_save_string(cookie_found,"_DP");

}
#endif 

#ifdef SET_COOKIE_VAL_EX   
void call_to_set_cookie_val_ex()
{
  char *cookie = %COOKIE_NAME ;  
  printf("\nNS_SET_COOKIE_VAL_EX API called");
  ns_set_cookie_val_ex(cookie,NULL,NULL,%COOKIE_VAL);
  ns_save_string(ns_get_cookie_val_ex(cookie,NULL,NULL),"_DP");
  printf("Value saved = %s\n",ns_eval_string("{_DP}")); 
}

#endif 

void flow()
{
  
#ifdef SAVE_STRING
  call_to_save_string_api();
#endif 

#ifdef EVAL_STRING
  call_to_eval_string_api();
#endif 

#ifdef ADV_PARAM
  call_to_advance_param_api(TEST_TYPE);
#endif 

#ifdef SAVE_DATA_VAR
  call_to_save_data_var_api();
#endif 

#ifdef SAVE_DATA_EVAL
  call_to_save_data_eval_api();
#endif

#ifdef SAVE_DATA_EX
  call_to_save_data_ex_api() ;
#endif

#ifdef GET_COOKIE_VAL_EX 
  ns_start_transaction("API_COOKIE_T01");
  ns_web_url("CookiePage",
    "URL=http://127.0.0.1/Cookie_Smoke/CookieMacys.html", 
  );
 call_to_get_cookie_val_ex();
 ns_end_transaction("API_COOKIE_T01",NS_AUTO_STATUS);
#endif 

   ns_start_transaction("API_T01");
   ns_web_url("Tiny",
      "URL=http://127.0.0.1/tiny?{_DP}",
      "BODY={_DP}"
   );

   ns_end_transaction("API_T01",NS_AUTO_STATUS);
   ns_page_think_time(0);

#ifdef SET_COOKIE_VAL_EX

  ns_start_transaction("API_COOKIE_T02"); 
  ns_web_url("CookiePage2",
  "URL=http://127.0.0.1/Cookie_Smoke/CookieMacys.html?"
  ); 
  call_to_set_cookie_val_ex();
  ns_web_url("Tiny_2",
    "URL=http://127.0.0.1/tiny?{_DP}",
    "BODY={_DP}"
  ); 
  ns_end_transaction("API_COOKIE_T02",NS_AUTO_STATUS);  

#endif 
}

