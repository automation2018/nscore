#!/usr/bin/env bash

source $NS_WDIR/lib/automation_util
T_NAME=$(get_tname)

if [ "XX$T_NAME" == "XXSMOKE-004-001" ]; then
    Location_Var=`grep -c "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2`
    Location_Var1=`grep -w "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2 |head -1 |tail -1`
    Location_Var2=`grep -w "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2 |head -2 |tail -1`
    if [ "XX$SD_TotalSuccURL" == "XX3" ] && \
       [ "XX$SD_URLFailures" == "XX0" ] && \
       [ "XX$Location_Var" == "XX2" ] && \
       [ "$Location_Var1" == " /Smoke_Redirect/url2.html" ] && \
       [ "$Location_Var2" == " /Smoke_Redirect/url3.html" ] ; then 
        log_status_and_exit_ex "PASS" "Auto Redirect 10 Depth Server URL and Scenario 2 Depth Redirection Passed"
    else 
	log_status_and_exit_ex "FAIL" "Auto Redirect 10 Depth Server URL and Scenario 2 Depth Redirection Failed" 
    fi
fi 

if [ "XX$T_NAME" == "XXSMOKE-004-002" ]; then
    Location_Var=`grep -c "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2 `
    Location_Var1=`grep -w "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2 |head -1 |tail -1`
    if [ "XX$SD_TotalSuccURL" == "XX2" ] && \
       [ "XX$SD_URLFailures" == "XX0" ] && \
       [ "XX$Location_Var" == "XX1" ]; then
        log_status_and_exit_ex "PASS" "Auto Redirect One Depth Server URL with relative path Passed"
    else
        log_status_and_exit_ex "FAIL" "Auto Redirect One Depth Server URL with relative path Failed"
    fi
fi

if [ "XX$T_NAME" == "XXSMOKE-004-003" ]; then
    Location_Var=`grep -c "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2 `
    Host_Val=`grep -r "Host: " $T_ID_REQ_PATH/url_req_0_0_0_0_0_0_0_0_0.dat |head -2 |tail -1| cut -d ':' -f2`
    if [ "XX$SD_TotalSuccURL" == "XX2" ] && \
       [ "XX$SD_URLFailures" == "XX0" ] && \
       [ "XX$Location_Var" == "XX1" ] && \
       [ "XX$Host_Val" == "XX www.google.com2" ]; then
        log_status_and_exit_ex "PASS" "Auto Redirect For Different Host Test Passed"
    else
        log_status_and_exit_ex "FAIL" "Auto Redirect For Different Host Test Failed"
    fi
fi

if [ "XX$T_NAME" == "XXSMOKE-004-004" ]; then
    Location_Var=`grep -c "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2 `
    Host_Val=`grep -r "Host: " $T_ID_REQ_PATH/url_req_0_0_0_0_0_0_0_0_0.dat |head -2 |tail -1| cut -d ' ' -f2`
    debug_log "Location_Var=$Location_Var"
    debug_log "Host_Val=$Host_Val"
    if [ "XX$SD_TotalSuccURL" == "XX5" ] && \
       [ "XX$SD_URLFailures" == "XX0" ] && \
       [ "XX$Location_Var" == "XX4" ] && \
       [ "$Host_Val" == "10.10.30.96" ]; then
        log_status_and_exit_ex "PASS" "Auto Redirect For Relative To Absolute redirection Passed"
    else
        log_status_and_exit_ex "FAIL" "Auto Redirect For Relative To Absolute redirection Failed"
    fi
fi

if [ "XX$T_NAME" == "XXSMOKE-004-005" ]; then
    Location_Var=`grep -c "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2 `
    Host_Val=`grep -r "Host: " $T_ID_REQ_PATH/url_req_0_0_0_0_0_0_0_0_0.dat |head -2 |tail -1| cut -d ':' -f2`
    if [ "XX$SD_TotalSuccURL" == "XX5" ] && \
       [ "XX$SD_URLFailures" == "XX0" ] && \
       [ "XX$Location_Var" == "XX4" ]; then
        log_status_and_exit_ex "PASS" "Auto Redirect For Different Protocol Url Passed"
    else
        log_status_and_exit_ex "FAIL" "Auto Redirect For Different Protocol Url Failed"
    fi
fi

if [ "XX$T_NAME" == "XXSMOKE-004-006" ]; then
    page1_loc_var_count=$(grep -c "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2)
    page2_loc_var_count=$(grep -c "Location: " $T_ID_REQ_PATH/url_rep_0_0_0_1_0_0_0_1_0.dat |cut -d ':' -f2)
    page1_ref_var_count=$(grep -c "Referer: " $T_ID_REQ_PATH/url_req_0_0_0_0_0_0_0_0_0.dat |cut -d ':' -f2)
    page2_ref_var_count=$(grep -c "Referer: " $T_ID_REQ_PATH/url_req_0_0_0_1_0_0_0_1_0.dat |cut -d ':' -f2)
    no_manual_request_line=$(grep '^HTTP' $T_ID_REQ_PATH/url_rep_0_0_0_0_0_0_0_0_0.dat | head -1 | cut -d '' -f1)
    manual_url_request_line=$(grep '^HTTP' $T_ID_REQ_PATH/url_rep_0_0_0_1_0_0_0_1_0.dat | head -1 | cut -d '' -f1)

    debug_log "page1_loc_var_count=$page1_loc_var_count;page2_loc_var_count=$page2_loc_var_count"
    debug_log "page1_ref_var_count=$page1_ref_var_count;page2_ref_var_count=$page2_ref_var_count"
    debug_log "no_manual_request_line=${no_manual_request_line}"
    debug_log "manual_url_request_line=${manual_url_request_line}"
    
    if [ "$no_manual_request_line" == 'HTTP/1.1 200 OK' ] && \
       [ "$manual_url_request_line" == 'HTTP/1.1 302 Moved Temporarily' ] && \
       [ $page1_loc_var_count -eq 0 ] && \
       [ $page2_loc_var_count -eq 1 ] && \
       [ $page1_ref_var_count -eq 1 ] && \
       [ $page2_ref_var_count -eq 2 ]; then
        log_status_and_exit_ex "PASS" "Validation passed for Manual redirection testcase"
    else
        log_status_and_exit_ex "FAIL" "Validations failed for Manual redirection testcase"
    fi
fi

exit 0
