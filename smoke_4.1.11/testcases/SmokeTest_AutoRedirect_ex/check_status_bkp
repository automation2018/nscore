#!/usr/bin/env bash
# Generated by: needle
# Check status written by: Asheesh Kumar Tivaree
#Check status description: It is covered Auto redirection cases for HTTP/1.1 and HTTP/2.0 both.
#    Date Time: 09/09/16 10:54:38 AM
#  Description: Check status to validate cases for smoke
# 
# Conventions
#   1. Two(2) space indentation. No tabs
#   2. Variables and function starts with snake_case
#		3. Constants are declared with ALL_CAPS

# Source out required files
source $NS_WDIR/lib/automation_util

# Default Constants
PATH_TO_TEST_RUN="$NS_WDIR/logs/TR${T_RUN_ID}"
PARTITION_PATH="${PATH_TO_TEST_RUN}/$(get_test_partition)"
PROGRESS_REPORT_FILE="${PATH_TO_TEST_RUN}/progress.report"
DEBUG_LOG_FILE="${PATH_TO_TEST_RUN}/debug.log"
URL_REQ_FILE="${PATH_TO_TEST_RUN}/2*/ns_logs/req_rep/url_req*"
URL_REP_FILE="${PATH_TO_TEST_RUN}/2*/ns_logs/req_rep/url_rep*"
T_NAME="$(get_tname)"

# Entry point to check status
# Add cases to handle your validation
function main() {
	case $(get_tname) in
    "SMOKE-004-001") handle_Auto_Redirect-001 ;;
    "SMOKE-004-002") handle_Auto_Redirect-002 ;;
    "SMOKE-004-003") handle_Auto_Redirect-003 ;;
    "SMOKE-004-004") handle_Auto_Redirect-004 ;;
    "SMOKE-004-005") handle_Auto_Redirect-005 ;;
    "SMOKE-004-006") handle_Auto_Redirect-006 ;;
    "SMOKE-004-007") handle_Auto_Redirect-007 ;;
    "SMOKE-004-008") handle_Auto_Redirect-008 ;;
    "SMOKE-004-009") handle_Auto_Redirect-009 ;;
    "SMOKE-004-010") handle_Auto_Redirect-010 ;;
    "SMOKE-004-011") handle_Auto_Redirect-011 ;;
    "SMOKE-004-012") handle_Auto_Redirect-012 ;;
    "SMOKE-004-013") handle_Auto_Redirect-013 ;;
    "SMOKE-004-014") handle_Auto_Redirect-014 ;;
    "SMOKE-004-015") handle_Auto_Redirect-015 ;;
    "SMOKE-004-016") handle_Auto_Redirect-016 ;;
    "SMOKE-004-017") handle_Auto_Redirect-017 ;;
    "SMOKE-004-018") handle_Auto_Redirect-018 ;;
# End case def
		*) handle_unknown_case ;;
		?) handle_unknown_case ;;
  esac
}

# Helper function to log status
# Sets additional product id and
# category id
function handle_unknown_case() {
	error "Testcase name not found"
	log_status_and_exit_ex "FAIL" "Testcase name not found"
}

# TODO: 
# 1. Add logic to validate case smoke-001
# 2. Depending upon evaluation update the status with your own description

function get_expected_result()
{
  redirection_depth=$(grep "DEPTH_DESC" $PATH_TO_TEST_RUN/scenario | cut -d ' ' -f2)
  sessions=2
  expected_found_302_count=$((sessions*redirection_depth))
  expected_location_header=$expected_found_302_count
}

function get_actual_result()
{
  actual_found_302_count=$(grep -i "302 Moved Temporarily" $URL_REP_FILE | wc -l)
 #actual_found_302_count=$(grep -i "HTTP/1.1 302 Found" $URL_REP_FILE | wc -l)
  actual_found_302_count_mode2=$(grep -a ":status: 302" $URL_REP_FILE | wc -l)
  actual_location_header=$(grep -ai "Location" $URL_REP_FILE | wc -l)
  actual_request_methods=$(grep -ai "POST" $URL_REQ_FILE | wc -l)
  Url_success=$(grep "Url  Report" $PROGRESS_REPORT_FILE | cut -d '/' -f2| awk '{print $2}')
  Url_completed=$(grep "Url  Report" $PROGRESS_REPORT_FILE | cut -d ':' -f3 | cut -d '/' -f1 | awk '{print $2}')
  if [ $Url_completed -ne $Url_success ];then
     Failure_reason=$(grep "Url  Report" $PROGRESS_REPORT_FILE | cut -d '/' -f3 | cut -d ':' -f1)
     if [ $Failure_reason == "RedirectLimit" ];then
     Url_report_msg=$(grep "Url  Report" $PROGRESS_REPORT_FILE | awk -F ':' '{print $3":"$4}')
     Failure_reason=0
     fi
  else
     Failure_reason=0
  fi
}


function handle_Auto_Redirect-001() {
get_expected_result
get_actual_result
debug_log "case1"
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count ];then
      if [ $expected_location_header -eq $actual_location_header ];then
         log_status_and_exit_ex "PASS" "Redirection upto 5 depth without using parent url method for redirected url"
     else
         log_status_and_exit_ex "FAIL" "Redirection upto 5 depth without using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header" 
     fi
 else
   log_status_and_exit_ex "FAIL" "Redirection upto 5 depth without using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
  fi
else
  log_status_and_exit_ex "FAIL" "Redirection upto 5 depth without using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-002() {
get_expected_result
get_actual_result
debug_log "case2"
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count ];then
    if [ $expected_location_header -eq $actual_location_header ];then
        if [ $actual_request_methods -eq 12 ];then
        log_status_and_exit_ex "PASS" "Redirection upto 5 depth using parent url method for redirected url"
    else
        log_status_and_exit_ex "FAIL" "Redirection upto 5 depth using parent url method for redirected url failed because expected request method was 12 and actual is $actual_request_methods"
    fi
      else
      log_status_and_exit_ex "FAIL" "Redirection upto 5 depth using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
      log_status_and_exit_ex "FAIL" "Redirection upto 5 depth using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
    fi
    else
log_status_and_exit_ex "FAIL" "Redirection upto 5 depth using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-003() {
debug_log "case3"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count ];then
    if [ $expected_location_header -eq $actual_location_header ];then
       log_status_and_exit_ex "PASS" "Redirection from http to https upto depth 1 without using parent url method for redirected url"
    else
       log_status_and_exit_ex "FAIL" "Redirection from http to https upto depth 1 without using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
       log_status_and_exit_ex "FAIL" "Redirection from http to https upto depth 1 without using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
    fi
    else
  log_status_and_exit_ex "FAIL" "Redirection from http to https upto depth 1 without using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-004() {
debug_log "case4"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count ];then
    if [ $expected_location_header -eq $actual_location_header ];then
      if [ $actual_request_methods -eq 4 ];then
      log_status_and_exit_ex "PASS" "Redirection from http to https upto depth 1 using parent url method for redirected url"
      else
      log_status_and_exit_ex "FAIL" "Redirection from http to https upto depth 1 using parent url method for redirected url failed because expected request method was 4 and actual is $actual_request_methods"
      fi
      else
      log_status_and_exit_ex "FAIL" "Redirection from http to https upto depth 1 using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
   else
    log_status_and_exit_ex "FAIL" "Redirection from http to https upto depth 1 using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
   fi
else
log_status_and_exit_ex "FAIL" "Redirection from http to https upto depth 1 using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-005() {
debug_log "case5"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count ];then
    if [ $expected_location_header -eq $actual_location_header ];then
    log_status_and_exit_ex "PASS" "Redirection from one host to another host"
    else
    log_status_and_exit_ex "FAIL" "Redirection from one host to another host failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
    log_status_and_exit_ex "FAIL" "Redirection from one host to another host failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
    fi
    else
log_status_and_exit_ex "FAIL" "Redirection from one host to another host failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-006() {
get_expected_result
get_actual_result
debug_log "case6"
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "expected url report= $Url_report_msg"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
 if [ $actual_found_302_count -eq 8 ];then
  if [ $actual_location_header -eq 8 ];then
    log_status_and_exit_ex "PASS" "Redirection restriction after depth 3"
    else
    log_status_and_exit_ex "FAIL" "Redirection restriction after depth 3 failed because expected Location header count was 8 and actual is $actual_location_header"
    fi
    else
    log_status_and_exit_ex "FAIL" "Redirection restriction after depth 3 failed because expected 302 was 8 and actual is $actual_found_302_count"
    fi
else
log_status_and_exit_ex "FAIL" "Redirection restriction after depth 3 failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-007() {
debug_log "case7"
get_expected_result
get_actual_result
debug_log "actual 302 count: $actual_found_302_count"
debug_log "expected 302 count: $expected_found_302_count"
debug_log "expected location header count= $expected_location_header"
debug_log "actual location header count= $actual_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
 if [ $expected_found_302_count -eq $actual_found_302_count ];then
   if [ $expected_location_header -eq $actual_location_header ];then
    log_status_and_exit_ex "PASS" "HTTP2 Upgrade Mode- Redirection upto 5 depth without using parent url method for redirected url"
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection upto 5 depth without using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection upto 5 depth without using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
    fi
else
log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection upto 5 depth without using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-008() {
debug_log "case8"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
 if [ $expected_found_302_count -eq $actual_found_302_count ];then
  if [ $expected_location_header -eq $actual_location_header ];then
   if [ $actual_request_methods -eq 12 ];then
    log_status_and_exit_ex "PASS" "HTTP2 Upgrade Mode- Redirection upto 5 depth using parent url method for redirected url"
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection upto 5 depth using parent url method for redirected url failed because expected request method was 12 and actual is $actual_request_methods"
    fi
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection upto 5 depth using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection upto 5 depth using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
    fi
    else
log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection upto 5 depth using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-009() {
debug_log "case9"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
 if [ $expected_found_302_count -eq $actual_found_302_count ];then
  if [ $expected_location_header -eq $actual_location_header ];then
  log_status_and_exit_ex "PASS" "HTTP2 Upgrade Mode- Redirection from http to https upto depth 1 without using parent url method for redirected url"
  else
  log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from http to https upto depth 1 without using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
  fi
  else
  log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from http to https upto depth 1 without using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
  fi
  else
log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from http to https upto depth 1 without using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-010() {
debug_log "case10"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
 if [ $expected_found_302_count -eq $actual_found_302_count ];then
  if [ $expected_location_header -eq $actual_location_header ];then
   if [ $actual_request_methods -eq 4 ];then
    log_status_and_exit_ex "PASS" "HTTP2 Upgrade Mode- Redirection from http to https upto depth 1 using parent url method for redirected url"
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from http to https upto depth 1 using parent url method for redirected url failed because expected request method was 4 and actual is $actual_request_methods"
    fi
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from http to https upto depth 1 using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from http to https upto depth 1 using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
    fi
    else
log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from http to https upto depth 1 using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-011() {
debug_log "case11"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
 if [ $expected_found_302_count -eq $actual_found_302_count ];then
  if [ $expected_location_header -eq $actual_location_header ];then
    log_status_and_exit_ex "PASS" "HTTP2 Upgrade Mode- Redirection from one host to another host"
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from one host to another host failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from one host to another host failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count"
    fi
    else
log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection from one host to another host failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-012() {
get_expected_result
get_actual_result
debug_log "case12"
debug_log "actual 302 count= $actual_found_302_count"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "expected url report= $Url_report_msg"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
 if [ $actual_found_302_count -eq 8 ];then
  if [ $actual_location_header -eq 8 ];then
    log_status_and_exit_ex "PASS" "HTTP2 Upgrade Mode- Redirection restriction after depth 3"
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection restriction after depth 3 failed because expected Location header count was 8 and actual is $actual_location_header"
    fi
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection restriction after depth 3 failed because expected 302 was 8 and actual is $actual_found_302_count"
    fi
else
log_status_and_exit_ex "FAIL" "HTTP2 Upgrade Mode- Redirection restriction after depth 3 failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-013() {
get_expected_result
get_actual_result
debug_log "case13"
debug_log "actual 302 count= $actual_found_302_count_mode2"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count_mode2 ];then
      if [ $expected_location_header -eq $actual_location_header ];then
         log_status_and_exit_ex "PASS" "HTTP2 Prior knowledge Mode- Redirection upto 5 depth without using parent url method for redirected url"
     else
         log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection upto 5 depth without using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header" 
     fi
 else
   log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection upto 5 depth without using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count_mode2"
  fi
else
  log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection upto 5 depth without using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-014() {
get_expected_result
get_actual_result
debug_log "case14"
debug_log "actual 302 count= $actual_found_302_count_mode2"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count_mode2 ];then
    if [ $expected_location_header -eq $actual_location_header ];then
        if [ $actual_request_methods -eq 12 ];then
        log_status_and_exit_ex "PASS" "HTTP2 Prior knowledge Mode- Redirection upto 5 depth using parent url method for redirected url"
    else
        log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection upto 5 depth using parent url method for redirected url failed because expected request method was 12 and actual is $actual_request_methods"
    fi
      else
      log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection upto 5 depth using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
      log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection upto 5 depth using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count_mode2"
    fi
    else
log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection upto 5 depth using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-015() {
debug_log "case15"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count_mode2"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count_mode2 ];then
    if [ $expected_location_header -eq $actual_location_header ];then
       log_status_and_exit_ex "PASS" "HTTP2 Prior knowledge Mode- Redirection from http to https upto depth 1 without using parent url method for redirected url"
    else
       log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from http to https upto depth 1 without using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
       log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from http to https upto depth 1 without using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count_mode2"
    fi
    else
  log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from http to https upto depth 1 without using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-016() {
debug_log "case16"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count_mode2"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count_mode2 ];then
    if [ $expected_location_header -eq $actual_location_header ];then
      if [ $actual_request_methods -eq 4 ];then
      log_status_and_exit_ex "PASS" "HTTP2 Prior knowledge Mode- Redirection from http to https upto depth 1 using parent url method for redirected url"
      else
      log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from http to https upto depth 1 using parent url method for redirected url failed because expected request method was 4 and actual is $actual_request_methods"
      fi
      else
      log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from http to https upto depth 1 using parent url method for redirected url failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
   else
    log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from http to https upto depth 1 using parent url method for redirected url failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count_mode2"
   fi
else
log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from http to https upto depth 1 using parent url method for redirected url failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-017() {
debug_log "case17"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count_mode2"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
  if [ $expected_found_302_count -eq $actual_found_302_count_mode2 ];then
    if [ $expected_location_header -eq $actual_location_header ];then
    log_status_and_exit_ex "PASS" "HTTP2 Prior knowledge Mode- Redirection from one host to another host"
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from one host to another host failed because expected Location header count was $expected_location_header and actual is $actual_location_header"
    fi
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from one host to another host failed because expected 302 was $expected_found_302_count and actual is $actual_found_302_count_mode2"
    fi
    else
log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection from one host to another host failed due to $Failure_reason error"
fi
}

function handle_Auto_Redirect-018() {
debug_log "case18"
get_expected_result
get_actual_result
debug_log "actual 302 count= $actual_found_302_count_mode2"
debug_log "expected 302 count= $expected_found_302_count"
debug_log "actual location headers= $actual_location_header"
debug_log "expected location headers= $expected_location_header"
debug_log "expected url report= $Url_report_msg"
debug_log "failure status= $Failure_reason"
if [ $Failure_reason -eq 0 ];then
 if [ $actual_found_302_count_mode2 -eq 8 ];then
  if [ $actual_location_header -eq 8 ];then
    log_status_and_exit_ex "PASS" "HTTP2 Prior knowledge Mode- Redirection restriction after depth 3"
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection restriction after depth 3 failed because expected Location header count was 8 and actual is $actual_location_header"
    fi
    else
    log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection restriction after depth 3 failed because expected 302 was 8 and actual is $actual_found_302_count_mode2"
    fi
else
log_status_and_exit_ex "FAIL" "HTTP2 Prior knowledge Mode- Redirection restriction after depth 3 failed due to $Failure_reason error"
fi
}


# Do not override it
main
exit 0
