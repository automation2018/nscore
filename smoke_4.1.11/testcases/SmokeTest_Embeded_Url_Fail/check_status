#!/usr/bin/env bash
# Source out required files
source $NS_WDIR/lib/automation_util

# Default Constants
S_FILE="/home/netstorm/work/logs/TR${T_RUN_ID}/scenario"
P_FILE="/home/netstorm/work/logs/TR${T_RUN_ID}/progress.report"
FLOW_FILE="$NS_WDIR/logs/TR${T_RUN_ID}/$(get_test_partition)/scripts/Hpd_Tours_PAT/flow.c"
TX_DETAIL_FILE="/home/netstorm/work/logs/TR${T_RUN_ID}/trans_detail.dat"
test_case_name=$(get_testcase_name)
test_console_file="${TS_LOG_DIR}/${test_case_name}/test_run.report"

# Entry point to check status
# Add cases to handle your validation
function main() {
	case $(get_tname) in
    "SMOKE-048-001") validate_Embeded_Url_Fail_001 ;;
# End case def
		*) handle_unknown_case ;;
		?) handle_unknown_case ;;
  esac
}

function handle_unknown_case() {
	log_status_and_exit_ex "FAIL" "testcase not found"
}

# TODO: 
# 2. Depending upon evaluation update the status with your own description
function validate_Embeded_Url_Fail_001(){
	page_completed=$(grep "Page  Report" $P_FILE | awk -F'/' '{print $1}'| awk -F':' '{print $3}')
	success=$(grep "Page  Report" $P_FILE | awk -F'/' '{print $2}')
	url_4xx=$(grep "Page  Report" $P_FILE | awk -F'/' '{print $3}')

	debug_log "page completed: $page_completed"
	debug_log "success: $success"
	debug_log "4XX URL: $url_4xx"
	if [ "$page_completed" == " completed 14" ];
	then
		if [ "$success" == "succ 12" ];
		then
			if [ "$url_4xx" == "4xx: 2" ];
			then
				log_status_and_exit_ex "PASS" "Main page failed on the failure of embeded url"
			else
				log_status_and_exit_ex "FAIL" "URL failure is $url_4xx"
			fi
		else
			log_status_and_exit_ex "FAIL" "Number of Success pages is $success"
		fi
	else
		log_status_and_exit_ex "FAIL" "Number of Page Completed: $page_completed"
	fi
}

# Call to main function
# Do not override it
main

exit 0
