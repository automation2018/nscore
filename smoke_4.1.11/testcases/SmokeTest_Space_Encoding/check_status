#!/usr/bin/env bash
# Generated by: needle
#    Date Time: 03/05/18 11:07:24 AM
#  Description: Check status to validate cases for smoke
# 
# Conventions
#   1. Two(2) space indentation. No tabs
#   2. Variables and function starts with snake_case
#		3. Constants are declared with ALL_CAPS


source $NS_WDIR/lib/automation_util
T_NAME=$(get_tname)
#REQS_FILES="${PARTITION_PATH}/ns_logs/req_rep/"
#REQS_FILES="$(get_test_partition)/ns_logs/req_rep/"
REQS_FILES="${T_ID_REQ_PATH}"

function main(){
    case $(get_tname) in
	"SMOKE-ENCODING-067-001") with_default_value_of_encoding ;;
        "SMOKE-ENCODING-067-002") passing_with_third_argument ;;
        "SMOKE-ENCODING-067-003") passing_with_second_argument ;;
        "SMOKE-ENCODING-067-004") passing_with_first_argument ;;
	# End case def
        *) handle_unknown_case ;;
        ?) handle_unknown_case ;;
  esac
}

function handle_unknown_case() {
        error "Testcase name not found"
        log_status_and_exit_ex "FAIL" "Testcase name not found"
}

function with_default_value_of_encoding ()
{
req_rep_count=$(grep "GET" ${REQS_FILES}/url_req_0_0_0_0_0_0_0_0_0.dat | cut -d ' ' -f 2)

echo $req_rep_count
if [ "$req_rep_count" == "/tours%20/index.html" ] ;then
log_status_and_exit_ex "PASS" "with_default_value_of_encoding"
    else
        log_status_and_exit_ex "FAIL" "with_default_value_of_encoding"
fi
}

function  passing_with_third_argument ()
{
if [ -f ${REQS_FILES}/url_req_0_0_0_0_0_0_0_0_0.dat  ];then 
req_rep_count1=$(grep "GET" ${REQS_FILES}/url_req_0_0_0_0_0_0_0_0_0.dat | cut -d ' ' -f 2)
 
echo $req_rep_count1
if [ "$req_rep_count1"== "/tours/%20index.html?%20login" ];then
log_status_and_exit_ex "PASS" "passing_with_third_argument"
else
log_status_and_exit_ex "FAIL" "passing_with_third_argument"
fi
else
 log_status_and_exit_ex "FAIL" "Space Encoding passing with third arguement failed due to URL failure . "
fi
}
	
function passing_with_second_argument ()
{
if [ -f ${REQS_FILES}/url_req_0_0_0_0_0_0_0_0_0.dat ]; then
req_rep_count2=$(grep "GET" ${REQS_FILES}/url_req_0_0_0_0_0_0_0_0_0.dat |cut -d ' ' -f 2)

echo $req_rep_count2
if [ "$req_rep_count2"== "%2ftours%2f%20index.html?%7c/login%2a" ]; then
log_status_and_exit_ex "PASS" "passing_with_second_argument"
else
log_status_and_exit_ex "FAIL" "passing_with_second_argument"
fi
else
log_status_and_exit_ex "FAIL" Space Encoding passing with passing_with_second_argument failed due to URL failure"
fi
} 

function passing_with_first_argument ()
{
if [ -f ${REQS_FILES}/url_req_0_0_0_0_0_0_0_0_0.dat]; then
req_rep_count3=$(grep "GET" ${REQS_FILES}/url_req_0_0_0_0_0_0_0_0_0.dat |cut -d ' ' -f 2)

echo $req_rep_count3
if ["$req_rep_count3"=="/tours/%20index.html%7d" ]; then
log_status_and_exit_ex "PASS" "passing_with_first_argument"
else
log_status_and_exit_ex "FAIL" "passing_with_first_argument"
fi
else
log_status_and_exit_ex "FAIL" Space encoding passing with passing_with_first_argument failed due to URL failure"
fi
}













































