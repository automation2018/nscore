#!/usr/bin/env bash
# Generated by: needle
#    Date Time: 01/23/17 12:22:13 PM
#  Description: Check status to validate cases for smoke
# 
# Conventions
#   1. Two(2) space indentation. No tabs
#   2. Variables and function starts with snake_case
#		3. Constants are declared with ALL_CAPS

# Source out required files
source $NS_WDIR/lib/automation_util

# Default Constants
S_FILE="/home/netstorm/work/logs/TR${T_RUN_ID}/scenario"
P_FILE="/home/netstorm/work/logs/TR${T_RUN_ID}/progress.report"
FLOW_FILE="$NS_WDIR/logs/TR${T_RUN_ID}/$(get_test_partition)/scripts/Hpd_Tours_PAT/flow.c"
TX_DETAIL_FILE="/home/netstorm/work/logs/TR${T_RUN_ID}/trans_detail.dat"
test_case_name=$(get_testcase_name)
test_console_file="${TS_LOG_DIR}/${test_case_name}/test_run.report"
CSV="$NS_WDIR/logs/TR${T_RUN_ID}/$(get_test_partition)/reports/csv"
# Entry point to check status
# Add cases to handle your validation
function main() {
	case $(get_tname) in
    "SMOKE-001-001") validate_G_Tracing_4_1_0_0_0_0 ;;
    "SMOKE-001-002") validate_G_Tracing_4_2_0_0_0_0 ;;
    "SMOKE-001-003") validate_G_Tracing_4_0_1_0_0_0 ;;
    "SMOKE-001-004") validate_G_Tracing_4_0_2_0_0_0 ;;
    "SMOKE-001-005") validate_G_Tracing_4_1_1_0_0_0 ;;
    "SMOKE-001-006") validate_G_Tracing_4_1_2_0_0_0 ;;
    "SMOKE-001-007") validate_G_Tracing_4_2_1_0_0_0 ;;
    "SMOKE-001-008") validate_G_Tracing_4_2_2_0_0_0 ;;
    "SMOKE-001-009") validate_G_Tracing_4_0_0_0_1_0 ;;
    "SMOKE-001-010") validate_G_Tracing_4_0_1_0_1_0 ;;
    "SMOKE-001-011") validate_G_Tracing_4_0_2_0_1_0 ;;
    "SMOKE-001-012") validate_G_Tracing_4_1_0_0_1_0 ;;
    "SMOKE-001-013") validate_G_Tracing_4_1_1_0_1_0 ;;
    "SMOKE-001-014") validate_G_Tracing_4_1_2_0_1_0 ;;
    "SMOKE-001-015") validate_G_Tracing_4_2_0_0_1_0 ;;
    "SMOKE-001-016") validate_G_Tracing_4_2_1_0_1_0 ;;
# End case def
		*) handle_unknown_case ;;
		?) handle_unknown_case ;;
  esac
}

function handle_unknown_case() {
	log_status_and_exit_ex "FAIL" "Testcase name not found"
}

# TODO: 
# 1. Add logic to validate case SMOKE-001-001
# 2. Depending upon evaluation update the status with your own description
function validate_G_Tracing_4_1_0_0_0_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "PageCount csv: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 1 0 0 0 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_2_0_0_0_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "PageCount csv: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 2 0 0 0 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_0_1_0_0_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 3 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 3 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 0 1 0 0 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_0_2_0_0_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 0 2 0 0 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_1_1_0_0_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 3 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 3 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 1 1 0 0 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_1_2_0_0_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 1 2 0 0 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_2_1_0_0_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 3 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 3 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 2 1 0 0 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_2_2_0_0_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 2 2 0 0 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_0_0_0_1_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 0 0 0 1 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_0_1_0_1_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 3 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 3 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 0 1 0 1 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_0_2_0_1_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 0 2 0 1 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_1_0_0_1_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 1 0 0 1 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_1_1_0_1_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 3 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 3 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 1 0 0 1 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_1_2_0_1_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 1 0 0 1 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_2_0_0_1_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 7 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 7 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 1 0 0 1 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}

function validate_G_Tracing_4_2_1_0_1_0() {
    page_dump_count=$(wc -l ${CSV}/page_dump.csv | cut -d' ' -f1)
    prc_count=$(wc -l ${CSV}/prc.csv | cut -d' ' -f1)
    username="netstorm"
    database_name="test"
    pagedump_table="pagedumprecord_${T_RUN_ID}"
    page_count_database=$(echo $(psql -U $username -d $database_name -t -c "select count(*) from $pagedump_table ;"))
    debug_log "Pagdump_csv: $page_dump_count"
    debug_log "prc_csv: $prc_count"
    debug_log "Pagedump_db: $page_count_database"
    if [ "${page_dump_count}" -eq 3 ];then
	if [ $prc_count -eq 7 ];then
	    if [ $page_count_database -eq 3 ];then
		log_status_and_exit_ex "PASS" "G_TRACING keyword is validated for ALL 4 1 0 0 1 0"
		else
		log_status_and_exit_ex "FAIL" "Database page count missmatch"
	    fi
	else
	    log_status_and_exit_ex "FAIL" "Page Complete count mismatch in page dump directory"
	fi
    else
	log_status_and_exit_ex "FAIL" "Pagedump count missmatch in csv file"
    fi		
}


# Call to main function
# Do not override it
main
